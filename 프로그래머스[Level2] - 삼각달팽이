# Algorithm

###### 삼각달팽이
- 규칙을 찾는게 먼저 중요 
- x, y index에서 밑으로 n만큼 오른쪽으로 n-1만큼 위로 n-2 이런식으로 진행이 되는걸 파악하면 쉽다


```c

func solution(_ n:Int) -> [Int] {
    var arr: [[Int]] = Array(repeating: Array(repeating: 0, count: n), count: n)
    var n = n
    var count = 0
    var value = 0
    var x = -1, y = 0
    
    while true {
        if count == 0 {
            for _ in 0..<n {
                value += 1
                x += 1
                arr[x][y] = value
            }
            n -= 1
            count += 1
        } else if count == 1 {
            for _ in 1...n {
                y += 1
                value += 1
                arr[x][y] = value
            }
            n -= 1
            count += 1
        } else if count == 2 {
            for _ in 1...n {
                x -= 1
                y -= 1
                value += 1
                arr[x][y] = value
            }
            n -= 1
            count = 0
        }
        if n == 0 { break }
    }
    
    return arr.flatMap{ $0.filter { $0 != 0 } } //0값 제거 후 1차원 배열로 다시 return
}

print(solution(4))
print(solution(5))

```
